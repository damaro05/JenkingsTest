<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="gralDone" xml:space="preserve">
    <value>Finalizado</value>
  </data>
  <data name="gralPower" xml:space="preserve">
    <value>Potencia</value>
  </data>
  <data name="gralTemperature" xml:space="preserve">
    <value>Temperatura</value>
  </data>
  <data name="regAdd" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="regAxisGridAxis" xml:space="preserve">
    <value>Ejes</value>
  </data>
  <data name="regAxisGridGrid" xml:space="preserve">
    <value>Cuadrícula</value>
  </data>
  <data name="regAxisGridGridStep" xml:space="preserve">
    <value>Paso de la cuadrícula</value>
  </data>
  <data name="regAxisGridSeconds" xml:space="preserve">
    <value>(segundos)</value>
  </data>
  <data name="regAxisGridTimeWindow" xml:space="preserve">
    <value>Ventana de tiempo</value>
  </data>
  <data name="regButCancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="regButOk" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="regDataLost" xml:space="preserve">
    <value>Los datos de la serie se perderán. ¿Desea continuar?</value>
  </data>
  <data name="regFinish" xml:space="preserve">
    <value>Finalizar</value>
  </data>
  <data name="regMnuConfig" xml:space="preserve">
    <value>Configuración</value>
  </data>
  <data name="regMnuConfigAxis" xml:space="preserve">
    <value>Ejes y cuadrícula</value>
  </data>
  <data name="regMnuConfigOptions" xml:space="preserve">
    <value>Opciones</value>
  </data>
  <data name="regMnuConfigSeries" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="regMnuConfigTemplates" xml:space="preserve">
    <value>Plantillas</value>
  </data>
  <data name="regMnuConfigTemplatesLoad" xml:space="preserve">
    <value>Cargar</value>
  </data>
  <data name="regMnuConfigTemplatesSave" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="regMnuConfigTitle" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="regMnuConfigWizard" xml:space="preserve">
    <value>Asistente</value>
  </data>
  <data name="regMnuFile" xml:space="preserve">
    <value>Archivo</value>
  </data>
  <data name="regMnuFileExportToCSV" xml:space="preserve">
    <value>Exportar a CSV</value>
  </data>
  <data name="regMnuFileNew" xml:space="preserve">
    <value>Nuevo</value>
  </data>
  <data name="regMnuFileOpen" xml:space="preserve">
    <value>Abrir</value>
  </data>
  <data name="regMnuFilePrint" xml:space="preserve">
    <value>Imprimir</value>
  </data>
  <data name="regMnuFileSaveAs" xml:space="preserve">
    <value>Guardar como</value>
  </data>
  <data name="regModify" xml:space="preserve">
    <value>Modificar</value>
  </data>
  <data name="regNext" xml:space="preserve">
    <value>Siguiente</value>
  </data>
  <data name="regOptClrBackground" xml:space="preserve">
    <value>Fondo</value>
  </data>
  <data name="regOptClrDefaults" xml:space="preserve">
    <value>Restablecer valores predeterminados</value>
  </data>
  <data name="regOptClrGridDiv" xml:space="preserve">
    <value>Divisiones cuadrícula</value>
  </data>
  <data name="regOptClrPowerAxis" xml:space="preserve">
    <value>Eje potencia</value>
  </data>
  <data name="regOptClrSeriesText" xml:space="preserve">
    <value>Texto series</value>
  </data>
  <data name="regOptClrTempAxis" xml:space="preserve">
    <value>Eje temperatura</value>
  </data>
  <data name="regOptClrTimeAxis" xml:space="preserve">
    <value>Eje tiempo</value>
  </data>
  <data name="regOptClrTitle" xml:space="preserve">
    <value>Texto del título</value>
  </data>
  <data name="regOptColors" xml:space="preserve">
    <value>Colores</value>
  </data>
  <data name="regOptLinesAndPoints" xml:space="preserve">
    <value>Líneas y puntos</value>
  </data>
  <data name="regOptLineWidth" xml:space="preserve">
    <value>Ancho de línea (píx.)</value>
  </data>
  <data name="regOptPointWidth" xml:space="preserve">
    <value>Ancho de punto (píx.)</value>
  </data>
  <data name="regOptStartSide" xml:space="preserve">
    <value>Comienzo del trazado</value>
  </data>
  <data name="regOptStartSideLeft" xml:space="preserve">
    <value>Desde la izquierda</value>
  </data>
  <data name="regOptStartSideRight" xml:space="preserve">
    <value>Desde la derecha</value>
  </data>
  <data name="regOptTriggerAutoInfo" xml:space="preserve">
    <value>Comienza al extraer la herramienta del soporte</value>
  </data>
  <data name="regOptTriggerManualInfo" xml:space="preserve">
    <value>Comienza y finaliza usando los botones del gráfico</value>
  </data>
  <data name="regOptTriggerSingleInfo" xml:space="preserve">
    <value>Comienza al extraer la herramienta del soporte y finaliza al acabar la ventana de tiempo</value>
  </data>
  <data name="regPlotTitle" xml:space="preserve">
    <value>Título del gráfico</value>
  </data>
  <data name="regPrevious" xml:space="preserve">
    <value>Anterior</value>
  </data>
  <data name="regRemove" xml:space="preserve">
    <value>Quitar</value>
  </data>
  <data name="regSeriesListOfSeries" xml:space="preserve">
    <value>Lista de series</value>
  </data>
  <data name="regSeriesMagnitudePower" xml:space="preserve">
    <value>Potencia ( % )</value>
  </data>
  <data name="regSeriesMagnitudeTemp" xml:space="preserve">
    <value>Temperatura ( {0} )</value>
    <comment>{0} shows ºC or ºF</comment>
  </data>
  <data name="regSeriesSerieColor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="regSeriesSerieColorSelect" xml:space="preserve">
    <value>Seleccionar...</value>
  </data>
  <data name="regSeriesSerieData" xml:space="preserve">
    <value>Datos de la serie</value>
  </data>
  <data name="regSeriesSerieLine" xml:space="preserve">
    <value>Línea</value>
  </data>
  <data name="regSeriesSerieMagnitude" xml:space="preserve">
    <value>Magnitud</value>
  </data>
  <data name="regSeriesSerieName" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="regSeriesSeriePoints" xml:space="preserve">
    <value>Puntos</value>
  </data>
  <data name="regSeriesSeriePort" xml:space="preserve">
    <value>Puerto</value>
  </data>
  <data name="regSeriesSerieShowLine" xml:space="preserve">
    <value>Mostrar línea</value>
  </data>
  <data name="regSeriesSerieShowPoints" xml:space="preserve">
    <value>Mostrar puntos</value>
  </data>
  <data name="regSeriesSerieStation" xml:space="preserve">
    <value>Estación</value>
  </data>
  <data name="regStripCoordinates" xml:space="preserve">
    <value>Coordinadas</value>
  </data>
  <data name="regStripDefaultZoom" xml:space="preserve">
    <value>Zoom por omisión</value>
  </data>
  <data name="regStripPause" xml:space="preserve">
    <value>Pausa</value>
  </data>
  <data name="regStripPlay" xml:space="preserve">
    <value>Reproducir</value>
  </data>
  <data name="regStripRecord" xml:space="preserve">
    <value>Registrar</value>
  </data>
  <data name="regStripResetTrigger" xml:space="preserve">
    <value>Restablecer desencadenador</value>
  </data>
  <data name="regStripStatusPause" xml:space="preserve">
    <value>En pausa</value>
  </data>
  <data name="regStripStatusPlay" xml:space="preserve">
    <value>Reproduciendo</value>
  </data>
  <data name="regStripStatusRecord" xml:space="preserve">
    <value>Registrando</value>
  </data>
  <data name="regStripStatusStop" xml:space="preserve">
    <value>Detenido</value>
  </data>
  <data name="regStripStop" xml:space="preserve">
    <value>Detener</value>
  </data>
  <data name="regStripTrigger" xml:space="preserve">
    <value>Desencadenador</value>
  </data>
  <data name="regStripTriggerAuto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="regStripTriggerManual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="regStripTriggerSingle" xml:space="preserve">
    <value>Único</value>
  </data>
  <data name="regStripZoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="regTemplate" xml:space="preserve">
    <value>Plantilla</value>
  </data>
  <data name="regTemplateDefaultName" xml:space="preserve">
    <value>miNombrePlantilla</value>
  </data>
  <data name="regTemplateEnterName" xml:space="preserve">
    <value>Entre el nombre de la plantilla.</value>
  </data>
  <data name="regTime" xml:space="preserve">
    <value>Tiempo</value>
  </data>
  <data name="gralWarning" xml:space="preserve">
    <value>¡Atención!</value>
  </data>
  <data name="regWiz1Info" xml:space="preserve">
    <value>Paso 1 de 2. Conecte las estaciones de las cuales desea obtener los datos. Luego, añada las series que se mostrarán en el trazado, definiendo los parámetros y haciendo clic en el botón 'Añadir' para cada serie. Finalmente, entre el título para el trazado.</value>
  </data>
  <data name="regWiz2Info" xml:space="preserve">
    <value>Paso 2 de 2. Seleccione los rangos de los ejes y los pasos de la cuadrícula. En el eje del tiempo, el valor representa una ventana de tiempo.</value>
  </data>
  <data name="regWizard2AxisRange" xml:space="preserve">
    <value>Rango de ejes</value>
  </data>
  <data name="regWizardSeriesAndTitle" xml:space="preserve">
    <value>Series y Título</value>
  </data>
  <data name="regTemplateList" xml:space="preserve">
    <value>Lista de plantillas</value>
  </data>
  <data name="regTemplateParams" xml:space="preserve">
    <value>Parámetros de la plantilla</value>
  </data>
  <data name="regTemplateSeriesData" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="regTemplateTrigger" xml:space="preserve">
    <value>Desencadenador</value>
  </data>
  <data name="regSeriesSerieStationNoName" xml:space="preserve">
    <value>Sin nombre</value>
  </data>
  <data name="filterCommaSeparated" xml:space="preserve">
    <value>Valores separados por comas  (*.csv)|*.csv</value>
  </data>
  <data name="filterLabRegister" xml:space="preserve">
    <value>Archivo LabRegister (*.lbr)|*.lbr</value>
  </data>
  <data name="regEnterPlotTitle" xml:space="preserve">
    <value>Entre el título del gráfico.</value>
  </data>
  <data name="regMsgExtNotValid" xml:space="preserve">
    <value>La extensión del archivo debe ser .lbr o .csv</value>
  </data>
  <data name="regMsgGeneratingExt" xml:space="preserve">
    <value>Generando [0]</value>
    <comment>[0] is the extension, for ex. "CSV"</comment>
  </data>
  <data name="regMsgGeneratingFile" xml:space="preserve">
    <value>Generando [0]. Un momento...</value>
    <comment>[0] contains a file name</comment>
  </data>
  <data name="regMsgLoadingExt" xml:space="preserve">
    <value>Cargando [0]</value>
    <comment>[0] is the extension, for ex. "CSV"</comment>
  </data>
  <data name="regMsgLoadingFile" xml:space="preserve">
    <value>Cargando [0]. Un momento...</value>
    <comment>[0] contains a file name</comment>
  </data>
  <data name="regPlottingInAnotherWindow" xml:space="preserve">
    <value>Hay una estación definida para este gráfico que ya está graficando en otra ventana.</value>
  </data>
  <data name="regCannotCreateFile" xml:space="preserve">
    <value>No se puede crear el archivo {0} (error: {1})</value>
  </data>
  <data name="regCannotOpenFile" xml:space="preserve">
    <value>No se puede abrir el archivo {0} (error: {1})</value>
  </data>
  <data name="regCoordTime" xml:space="preserve">
    <value>Tiempo:</value>
    <comment>Time: xx:xx:xx</comment>
  </data>
  <data name="regSecondsPerTick" xml:space="preserve">
    <value>{0} Seg/Marca</value>
    <comment>Ex 2 Sec/Tick (Seconds per tick)</comment>
  </data>
  <data name="regNotLBRFile" xml:space="preserve">
    <value>No es un archivo LBR o está dañado.</value>
  </data>
  <data name="gralFlow" xml:space="preserve">
    <value>Caudal</value>
    <comment>new</comment>
  </data>
  <data name="regSeriesMagnitudeFlow" xml:space="preserve">
    <value>Caudal ( % )</value>
    <comment>new</comment>
  </data>
  <data name="regSeriesCannotSelectMagnitude" xml:space="preserve">
    <value>La magnitud no es compatible con la estación seleccionada.</value>
  </data>
</root>