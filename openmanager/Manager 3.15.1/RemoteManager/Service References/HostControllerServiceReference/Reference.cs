//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteManager.HostControllerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class faultError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RemoteManager.HostControllerServiceReference.dc_EnumConstJBCdc_FaultError CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RemoteManager.HostControllerServiceReference.dc_EnumConstJBCdc_FaultError Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_EnumConstJBC.dc_FaultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    public enum dc_EnumConstJBCdc_FaultError : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotControlledError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StationNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StationError = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToolError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValidTool = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FunctionNotSupported = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_InfoUpdateSoftware", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_InfoUpdateSoftware : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hostControllerSwAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime hostControllerSwDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hostControllerSwVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool remoteManagerSwAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime remoteManagerSwDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remoteManagerSwVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool stationControllerSwAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime stationControllerSwDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stationControllerSwVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool webManagerSwAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime webManagerSwDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string webManagerSwVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hostControllerSwAvailable {
            get {
                return this.hostControllerSwAvailableField;
            }
            set {
                if ((this.hostControllerSwAvailableField.Equals(value) != true)) {
                    this.hostControllerSwAvailableField = value;
                    this.RaisePropertyChanged("hostControllerSwAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime hostControllerSwDate {
            get {
                return this.hostControllerSwDateField;
            }
            set {
                if ((this.hostControllerSwDateField.Equals(value) != true)) {
                    this.hostControllerSwDateField = value;
                    this.RaisePropertyChanged("hostControllerSwDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hostControllerSwVersion {
            get {
                return this.hostControllerSwVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.hostControllerSwVersionField, value) != true)) {
                    this.hostControllerSwVersionField = value;
                    this.RaisePropertyChanged("hostControllerSwVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime lastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                if ((this.lastUpdateDateField.Equals(value) != true)) {
                    this.lastUpdateDateField = value;
                    this.RaisePropertyChanged("lastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool remoteManagerSwAvailable {
            get {
                return this.remoteManagerSwAvailableField;
            }
            set {
                if ((this.remoteManagerSwAvailableField.Equals(value) != true)) {
                    this.remoteManagerSwAvailableField = value;
                    this.RaisePropertyChanged("remoteManagerSwAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime remoteManagerSwDate {
            get {
                return this.remoteManagerSwDateField;
            }
            set {
                if ((this.remoteManagerSwDateField.Equals(value) != true)) {
                    this.remoteManagerSwDateField = value;
                    this.RaisePropertyChanged("remoteManagerSwDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remoteManagerSwVersion {
            get {
                return this.remoteManagerSwVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.remoteManagerSwVersionField, value) != true)) {
                    this.remoteManagerSwVersionField = value;
                    this.RaisePropertyChanged("remoteManagerSwVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool stationControllerSwAvailable {
            get {
                return this.stationControllerSwAvailableField;
            }
            set {
                if ((this.stationControllerSwAvailableField.Equals(value) != true)) {
                    this.stationControllerSwAvailableField = value;
                    this.RaisePropertyChanged("stationControllerSwAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime stationControllerSwDate {
            get {
                return this.stationControllerSwDateField;
            }
            set {
                if ((this.stationControllerSwDateField.Equals(value) != true)) {
                    this.stationControllerSwDateField = value;
                    this.RaisePropertyChanged("stationControllerSwDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stationControllerSwVersion {
            get {
                return this.stationControllerSwVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.stationControllerSwVersionField, value) != true)) {
                    this.stationControllerSwVersionField = value;
                    this.RaisePropertyChanged("stationControllerSwVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool webManagerSwAvailable {
            get {
                return this.webManagerSwAvailableField;
            }
            set {
                if ((this.webManagerSwAvailableField.Equals(value) != true)) {
                    this.webManagerSwAvailableField = value;
                    this.RaisePropertyChanged("webManagerSwAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime webManagerSwDate {
            get {
                return this.webManagerSwDateField;
            }
            set {
                if ((this.webManagerSwDateField.Equals(value) != true)) {
                    this.webManagerSwDateField = value;
                    this.RaisePropertyChanged("webManagerSwDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string webManagerSwVersion {
            get {
                return this.webManagerSwVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.webManagerSwVersionField, value) != true)) {
                    this.webManagerSwVersionField = value;
                    this.RaisePropertyChanged("webManagerSwVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_InfoUpdateSpecificTime", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_InfoUpdateSpecificTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool availableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool available {
            get {
                return this.availableField;
            }
            set {
                if ((this.availableField.Equals(value) != true)) {
                    this.availableField = value;
                    this.RaisePropertyChanged("available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_InfoUpdatePeriodicTime", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_InfoUpdatePeriodicTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool availableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte hourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte minuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool modeDailyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte weekdayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool available {
            get {
                return this.availableField;
            }
            set {
                if ((this.availableField.Equals(value) != true)) {
                    this.availableField = value;
                    this.RaisePropertyChanged("available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte hour {
            get {
                return this.hourField;
            }
            set {
                if ((this.hourField.Equals(value) != true)) {
                    this.hourField = value;
                    this.RaisePropertyChanged("hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte minute {
            get {
                return this.minuteField;
            }
            set {
                if ((this.minuteField.Equals(value) != true)) {
                    this.minuteField = value;
                    this.RaisePropertyChanged("minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool modeDaily {
            get {
                return this.modeDailyField;
            }
            set {
                if ((this.modeDailyField.Equals(value) != true)) {
                    this.modeDailyField = value;
                    this.RaisePropertyChanged("modeDaily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte weekday {
            get {
                return this.weekdayField;
            }
            set {
                if ((this.weekdayField.Equals(value) != true)) {
                    this.weekdayField = value;
                    this.RaisePropertyChanged("weekday");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_InfoCheckPeriodicTime", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_InfoCheckPeriodicTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool availableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool available {
            get {
                return this.availableField;
            }
            set {
                if ((this.availableField.Equals(value) != true)) {
                    this.availableField = value;
                    this.RaisePropertyChanged("available");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_UpdateNotifications", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_UpdateNotifications : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool emailAvailableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.emailAddressField, value) != true)) {
                    this.emailAddressField = value;
                    this.RaisePropertyChanged("emailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool emailAvailable {
            get {
                return this.emailAvailableField;
            }
            set {
                if ((this.emailAvailableField.Equals(value) != true)) {
                    this.emailAvailableField = value;
                    this.RaisePropertyChanged("emailAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_UpdateRemoteManager", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_UpdateRemoteManager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] bytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool finalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                if ((object.ReferenceEquals(this.bytesField, value) != true)) {
                    this.bytesField = value;
                    this.RaisePropertyChanged("bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool final {
            get {
                return this.finalField;
            }
            set {
                if ((this.finalField.Equals(value) != true)) {
                    this.finalField = value;
                    this.RaisePropertyChanged("final");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                if ((this.sequenceField.Equals(value) != true)) {
                    this.sequenceField = value;
                    this.RaisePropertyChanged("sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_UpdateWebManager", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_UpdateWebManager : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] bytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool finalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                if ((object.ReferenceEquals(this.bytesField, value) != true)) {
                    this.bytesField = value;
                    this.RaisePropertyChanged("bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool final {
            get {
                return this.finalField;
            }
            set {
                if ((this.finalField.Equals(value) != true)) {
                    this.finalField = value;
                    this.RaisePropertyChanged("final");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                if ((this.sequenceField.Equals(value) != true)) {
                    this.sequenceField = value;
                    this.RaisePropertyChanged("sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_FirmwareStation", Namespace="http://schemas.datacontract.org/2004/07/JBCStationControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_FirmwareStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hardwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string languageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string modelVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string protocolVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string softwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long stationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hardwareVersion {
            get {
                return this.hardwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.hardwareVersionField, value) != true)) {
                    this.hardwareVersionField = value;
                    this.RaisePropertyChanged("hardwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string model {
            get {
                return this.modelField;
            }
            set {
                if ((object.ReferenceEquals(this.modelField, value) != true)) {
                    this.modelField = value;
                    this.RaisePropertyChanged("model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string modelVersion {
            get {
                return this.modelVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.modelVersionField, value) != true)) {
                    this.modelVersionField = value;
                    this.RaisePropertyChanged("modelVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string protocolVersion {
            get {
                return this.protocolVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.protocolVersionField, value) != true)) {
                    this.protocolVersionField = value;
                    this.RaisePropertyChanged("protocolVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string softwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.softwareVersionField, value) != true)) {
                    this.softwareVersionField = value;
                    this.RaisePropertyChanged("softwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long stationID {
            get {
                return this.stationIDField;
            }
            set {
                if ((this.stationIDField.Equals(value) != true)) {
                    this.stationIDField = value;
                    this.RaisePropertyChanged("stationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_UpdateFirmware", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_UpdateFirmware : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] bytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool finalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sequenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                if ((object.ReferenceEquals(this.bytesField, value) != true)) {
                    this.bytesField = value;
                    this.RaisePropertyChanged("bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool final {
            get {
                return this.finalField;
            }
            set {
                if ((this.finalField.Equals(value) != true)) {
                    this.finalField = value;
                    this.RaisePropertyChanged("final");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sequence {
            get {
                return this.sequenceField;
            }
            set {
                if ((this.sequenceField.Equals(value) != true)) {
                    this.sequenceField = value;
                    this.RaisePropertyChanged("sequence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dc_EventLog", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
    [System.SerializableAttribute()]
    public partial class dc_EventLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime eventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string eventMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventApplication {
            get {
                return this.eventApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.eventApplicationField, value) != true)) {
                    this.eventApplicationField = value;
                    this.RaisePropertyChanged("eventApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime eventDate {
            get {
                return this.eventDateField;
            }
            set {
                if ((this.eventDateField.Equals(value) != true)) {
                    this.eventDateField = value;
                    this.RaisePropertyChanged("eventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventLevel {
            get {
                return this.eventLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.eventLevelField, value) != true)) {
                    this.eventLevelField = value;
                    this.RaisePropertyChanged("eventLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string eventMessage {
            get {
                return this.eventMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.eventMessageField, value) != true)) {
                    this.eventMessageField = value;
                    this.RaisePropertyChanged("eventMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://JBCHostControllerSrv", ConfigurationName="HostControllerServiceReference.IJBCHostControllerService")]
    public interface IJBCHostControllerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/IsAvailableRemoteServerDown" +
            "load", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/IsAvailableRemoteServerDown" +
            "loadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/IsAvailableRemoteServerDown" +
            "loadfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool IsAvailableRemoteServerDownload();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetAvailableRemoteServerDow" +
            "nload", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetAvailableRemoteServerDow" +
            "nloadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetAvailableRemoteServerDow" +
            "nloadfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetAvailableRemoteServerDownload(bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUserFilesLocalFolderLoca" +
            "tion", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetUserFilesLocalFolderLoca" +
            "tionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUserFilesLocalFolderLoca" +
            "tionfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        string GetUserFilesLocalFolderLocation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUserFilesLocalFolderLoca" +
            "tion", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetUserFilesLocalFolderLoca" +
            "tionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUserFilesLocalFolderLoca" +
            "tionfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetUserFilesLocalFolderLocation(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdate", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdatefaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_InfoUpdateSoftware CheckUpdate();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://JBCHostControllerSrv/IJBCHostControllerService/UpdateSystem")]
        void UpdateSystem();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateSpecificTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateSpecificTimeRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateSpecificTimefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_InfoUpdateSpecificTime GetUpdateSpecificTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateSpecificTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateSpecificTimeRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateSpecificTimefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetUpdateSpecificTime(RemoteManager.HostControllerServiceReference.dc_InfoUpdateSpecificTime infoUpdateSpecificTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdatePeriodicTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdatePeriodicTimeRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdatePeriodicTimefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_InfoUpdatePeriodicTime GetUpdatePeriodicTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdatePeriodicTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdatePeriodicTimeRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdatePeriodicTimefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetUpdatePeriodicTime(RemoteManager.HostControllerServiceReference.dc_InfoUpdatePeriodicTime infoUpdatePeriodicTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetCheckPeriodicTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetCheckPeriodicTimeRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetCheckPeriodicTimefaultEr" +
            "rorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_InfoCheckPeriodicTime GetCheckPeriodicTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetCheckPeriodicTime", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetCheckPeriodicTimeRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetCheckPeriodicTimefaultEr" +
            "rorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetCheckPeriodicTime(RemoteManager.HostControllerServiceReference.dc_InfoCheckPeriodicTime infoCheckPeriodicTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateNotifications", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateNotificationsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetUpdateNotificationsfault" +
            "ErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_UpdateNotifications GetUpdateNotifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateNotifications", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateNotificationsRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetUpdateNotificationsfault" +
            "ErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool SetUpdateNotifications(RemoteManager.HostControllerServiceReference.dc_UpdateNotifications updateNotifications);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedStation" +
            "Controller")]
        void CheckUpdateConnectedStationController(string swVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedRemoteM" +
            "anager", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedRemoteM" +
            "anagerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedRemoteM" +
            "anagerfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool CheckUpdateConnectedRemoteManager(string swVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateRemoteManager", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateRemoteManagerR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateRemoteManagerf" +
            "aultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_UpdateRemoteManager GetFileUpdateRemoteManager(int nSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedWebMana" +
            "ger", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedWebMana" +
            "gerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/CheckUpdateConnectedWebMana" +
            "gerfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        bool CheckUpdateConnectedWebManager(string swVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateWebManager", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateWebManagerResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateWebManagerfaul" +
            "tErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_UpdateWebManager GetFileUpdateWebManager(int nSequence);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetInfoUpdateFirmware", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetInfoUpdateFirmwareRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetInfoUpdateFirmwarefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_FirmwareStation[] GetInfoUpdateFirmware(RemoteManager.HostControllerServiceReference.dc_FirmwareStation infoUpdateFirmware);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateFirmware", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateFirmwareRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetFileUpdateFirmwarefaultE" +
            "rrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        RemoteManager.HostControllerServiceReference.dc_UpdateFirmware GetFileUpdateFirmware(int nSequence, string urlFirmwareSw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetStationControllerSwVersi" +
            "on", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetStationControllerSwVersi" +
            "onResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetStationControllerSwVersi" +
            "onfaultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        string GetStationControllerSwVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetHostControllerSwVersion", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetHostControllerSwVersionR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetHostControllerSwVersionf" +
            "aultErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        string GetHostControllerSwVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetWebManagerSwVersion", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/GetWebManagerSwVersionRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/GetWebManagerSwVersionfault" +
            "ErrorFault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        string GetWebManagerSwVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetWebManagerUri", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/SetWebManagerUriResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/SetWebManagerUrifaultErrorF" +
            "ault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        void SetWebManagerUri(System.Uri webManagerUri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://JBCHostControllerSrv/IJBCHostControllerService/RegisterEventLog", ReplyAction="http://JBCHostControllerSrv/IJBCHostControllerService/RegisterEventLogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RemoteManager.HostControllerServiceReference.faultError), Action="http://JBCHostControllerSrv/IJBCHostControllerService/RegisterEventLogfaultErrorF" +
            "ault", Name="faultError", Namespace="http://schemas.datacontract.org/2004/07/JBCHostControllerSrv")]
        void RegisterEventLog(RemoteManager.HostControllerServiceReference.dc_EventLog[] eventLog);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJBCHostControllerServiceChannel : RemoteManager.HostControllerServiceReference.IJBCHostControllerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JBCHostControllerServiceClient : System.ServiceModel.ClientBase<RemoteManager.HostControllerServiceReference.IJBCHostControllerService>, RemoteManager.HostControllerServiceReference.IJBCHostControllerService {
        
        public JBCHostControllerServiceClient() {
        }
        
        public JBCHostControllerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JBCHostControllerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JBCHostControllerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JBCHostControllerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAvailableRemoteServerDownload() {
            return base.Channel.IsAvailableRemoteServerDownload();
        }
        
        public bool SetAvailableRemoteServerDownload(bool active) {
            return base.Channel.SetAvailableRemoteServerDownload(active);
        }
        
        public string GetUserFilesLocalFolderLocation() {
            return base.Channel.GetUserFilesLocalFolderLocation();
        }
        
        public bool SetUserFilesLocalFolderLocation(string path) {
            return base.Channel.SetUserFilesLocalFolderLocation(path);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_InfoUpdateSoftware CheckUpdate() {
            return base.Channel.CheckUpdate();
        }
        
        public void UpdateSystem() {
            base.Channel.UpdateSystem();
        }
        
        public RemoteManager.HostControllerServiceReference.dc_InfoUpdateSpecificTime GetUpdateSpecificTime() {
            return base.Channel.GetUpdateSpecificTime();
        }
        
        public bool SetUpdateSpecificTime(RemoteManager.HostControllerServiceReference.dc_InfoUpdateSpecificTime infoUpdateSpecificTime) {
            return base.Channel.SetUpdateSpecificTime(infoUpdateSpecificTime);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_InfoUpdatePeriodicTime GetUpdatePeriodicTime() {
            return base.Channel.GetUpdatePeriodicTime();
        }
        
        public bool SetUpdatePeriodicTime(RemoteManager.HostControllerServiceReference.dc_InfoUpdatePeriodicTime infoUpdatePeriodicTime) {
            return base.Channel.SetUpdatePeriodicTime(infoUpdatePeriodicTime);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_InfoCheckPeriodicTime GetCheckPeriodicTime() {
            return base.Channel.GetCheckPeriodicTime();
        }
        
        public bool SetCheckPeriodicTime(RemoteManager.HostControllerServiceReference.dc_InfoCheckPeriodicTime infoCheckPeriodicTime) {
            return base.Channel.SetCheckPeriodicTime(infoCheckPeriodicTime);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_UpdateNotifications GetUpdateNotifications() {
            return base.Channel.GetUpdateNotifications();
        }
        
        public bool SetUpdateNotifications(RemoteManager.HostControllerServiceReference.dc_UpdateNotifications updateNotifications) {
            return base.Channel.SetUpdateNotifications(updateNotifications);
        }
        
        public void CheckUpdateConnectedStationController(string swVersion) {
            base.Channel.CheckUpdateConnectedStationController(swVersion);
        }
        
        public bool CheckUpdateConnectedRemoteManager(string swVersion) {
            return base.Channel.CheckUpdateConnectedRemoteManager(swVersion);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_UpdateRemoteManager GetFileUpdateRemoteManager(int nSequence) {
            return base.Channel.GetFileUpdateRemoteManager(nSequence);
        }
        
        public bool CheckUpdateConnectedWebManager(string swVersion) {
            return base.Channel.CheckUpdateConnectedWebManager(swVersion);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_UpdateWebManager GetFileUpdateWebManager(int nSequence) {
            return base.Channel.GetFileUpdateWebManager(nSequence);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_FirmwareStation[] GetInfoUpdateFirmware(RemoteManager.HostControllerServiceReference.dc_FirmwareStation infoUpdateFirmware) {
            return base.Channel.GetInfoUpdateFirmware(infoUpdateFirmware);
        }
        
        public RemoteManager.HostControllerServiceReference.dc_UpdateFirmware GetFileUpdateFirmware(int nSequence, string urlFirmwareSw) {
            return base.Channel.GetFileUpdateFirmware(nSequence, urlFirmwareSw);
        }
        
        public string GetStationControllerSwVersion() {
            return base.Channel.GetStationControllerSwVersion();
        }
        
        public string GetHostControllerSwVersion() {
            return base.Channel.GetHostControllerSwVersion();
        }
        
        public string GetWebManagerSwVersion() {
            return base.Channel.GetWebManagerSwVersion();
        }
        
        public void SetWebManagerUri(System.Uri webManagerUri) {
            base.Channel.SetWebManagerUri(webManagerUri);
        }
        
        public void RegisterEventLog(RemoteManager.HostControllerServiceReference.dc_EventLog[] eventLog) {
            base.Channel.RegisterEventLog(eventLog);
        }
    }
}
