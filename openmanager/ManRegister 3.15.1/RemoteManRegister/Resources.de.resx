<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="gralDone" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="gralPower" xml:space="preserve">
    <value>Leistung</value>
  </data>
  <data name="gralTemperature" xml:space="preserve">
    <value>Temperatur</value>
  </data>
  <data name="regAdd" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="regAxisGridAxis" xml:space="preserve">
    <value>Achse</value>
  </data>
  <data name="regAxisGridGrid" xml:space="preserve">
    <value>Raster</value>
  </data>
  <data name="regAxisGridGridStep" xml:space="preserve">
    <value>Rasterstufe</value>
  </data>
  <data name="regAxisGridSeconds" xml:space="preserve">
    <value>(Sekunden)</value>
  </data>
  <data name="regAxisGridTimeWindow" xml:space="preserve">
    <value>Zeitfenster</value>
  </data>
  <data name="regButCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="regButOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="regDataLost" xml:space="preserve">
    <value>Es werden Datenreihen verloren gehen. Sind Sie sicher, dass Sie fortfahren möchten?</value>
  </data>
  <data name="regFinish" xml:space="preserve">
    <value>Beenden</value>
  </data>
  <data name="regMnuConfig" xml:space="preserve">
    <value>Konfiguration</value>
  </data>
  <data name="regMnuConfigAxis" xml:space="preserve">
    <value>Achse und Raster</value>
  </data>
  <data name="regMnuConfigOptions" xml:space="preserve">
    <value>Optionen</value>
  </data>
  <data name="regMnuConfigSeries" xml:space="preserve">
    <value>Serien</value>
  </data>
  <data name="regMnuConfigTemplates" xml:space="preserve">
    <value>Vorlagen</value>
  </data>
  <data name="regMnuConfigTemplatesLoad" xml:space="preserve">
    <value>Laden</value>
  </data>
  <data name="regMnuConfigTemplatesSave" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="regMnuConfigTitle" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="regMnuConfigWizard" xml:space="preserve">
    <value>Assistent</value>
  </data>
  <data name="regMnuFile" xml:space="preserve">
    <value>Datei</value>
  </data>
  <data name="regMnuFileExportToCSV" xml:space="preserve">
    <value>In CSV exportieren</value>
  </data>
  <data name="regMnuFileNew" xml:space="preserve">
    <value>Neu</value>
  </data>
  <data name="regMnuFileOpen" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="regMnuFilePrint" xml:space="preserve">
    <value>Drucken</value>
  </data>
  <data name="regMnuFileSaveAs" xml:space="preserve">
    <value>Speichern unter</value>
  </data>
  <data name="regModify" xml:space="preserve">
    <value>Ändern</value>
  </data>
  <data name="regNext" xml:space="preserve">
    <value>Nächste</value>
  </data>
  <data name="regOptClrBackground" xml:space="preserve">
    <value>Hintergrund</value>
  </data>
  <data name="regOptClrDefaults" xml:space="preserve">
    <value>Default-Werte wiederherstellen</value>
  </data>
  <data name="regOptClrGridDiv" xml:space="preserve">
    <value>Raster-Aufteilungen</value>
  </data>
  <data name="regOptClrPowerAxis" xml:space="preserve">
    <value>Leistungs-Achse</value>
  </data>
  <data name="regOptClrSeriesText" xml:space="preserve">
    <value>Textserien</value>
  </data>
  <data name="regOptClrTempAxis" xml:space="preserve">
    <value>Temperatur-Achse</value>
  </data>
  <data name="regOptClrTimeAxis" xml:space="preserve">
    <value>Zeit-Achse</value>
  </data>
  <data name="regOptClrTitle" xml:space="preserve">
    <value>Titeltext</value>
  </data>
  <data name="regOptColors" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="regOptLinesAndPoints" xml:space="preserve">
    <value>Linien und Punkte</value>
  </data>
  <data name="regOptLineWidth" xml:space="preserve">
    <value>Linienbreite (Pixel)</value>
  </data>
  <data name="regOptPointWidth" xml:space="preserve">
    <value>Punktweite (Pixel)</value>
  </data>
  <data name="regOptStartSide" xml:space="preserve">
    <value>Seite, von der aus die Grafik startet</value>
  </data>
  <data name="regOptStartSideLeft" xml:space="preserve">
    <value>Von links</value>
  </data>
  <data name="regOptStartSideRight" xml:space="preserve">
    <value>Von rechts</value>
  </data>
  <data name="regOptTriggerAutoInfo" xml:space="preserve">
    <value>Startet, wenn das Werkzeug aus dem Ständer genommen wird</value>
  </data>
  <data name="regOptTriggerManualInfo" xml:space="preserve">
    <value>Wird mit Hilfe der Schaltflächen in der Grafik gestartet und beendet</value>
  </data>
  <data name="regOptTriggerSingleInfo" xml:space="preserve">
    <value>Startet, wenn das Werkzeug aus dem Ständer genommen wird und endet bei Ablauf des Zeitfensters</value>
  </data>
  <data name="regPlotTitle" xml:space="preserve">
    <value>Grafik-Titel</value>
  </data>
  <data name="regPrevious" xml:space="preserve">
    <value>Vorherige</value>
  </data>
  <data name="regRemove" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="regSeriesListOfSeries" xml:space="preserve">
    <value>Serienliste</value>
  </data>
  <data name="regSeriesMagnitudePower" xml:space="preserve">
    <value>Leistung (%)</value>
  </data>
  <data name="regSeriesMagnitudeTemp" xml:space="preserve">
    <value>Temperatur ( {0} )</value>
    <comment>{0} shows ºC or ºF</comment>
  </data>
  <data name="regSeriesSerieColor" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="regSeriesSerieColorSelect" xml:space="preserve">
    <value>Auswählen...</value>
  </data>
  <data name="regSeriesSerieData" xml:space="preserve">
    <value>Seriendaten</value>
  </data>
  <data name="regSeriesSerieLine" xml:space="preserve">
    <value>Linie</value>
  </data>
  <data name="regSeriesSerieMagnitude" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="regSeriesSerieName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="regSeriesSeriePoints" xml:space="preserve">
    <value>Punkte</value>
  </data>
  <data name="regSeriesSeriePort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="regSeriesSerieShowLine" xml:space="preserve">
    <value>Linie zeigen</value>
  </data>
  <data name="regSeriesSerieShowPoints" xml:space="preserve">
    <value>Punkte zeigen</value>
  </data>
  <data name="regSeriesSerieStation" xml:space="preserve">
    <value>Station</value>
  </data>
  <data name="regStripCoordinates" xml:space="preserve">
    <value>Koordinaten</value>
  </data>
  <data name="regStripDefaultZoom" xml:space="preserve">
    <value>Default-Zoom</value>
  </data>
  <data name="regStripPause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="regStripPlay" xml:space="preserve">
    <value>Abspielen</value>
  </data>
  <data name="regStripRecord" xml:space="preserve">
    <value>Aufzeichnen</value>
  </data>
  <data name="regStripResetTrigger" xml:space="preserve">
    <value>Auslösererkennung zurücksetzen</value>
  </data>
  <data name="regStripStatusPause" xml:space="preserve">
    <value>In Pause</value>
  </data>
  <data name="regStripStatusPlay" xml:space="preserve">
    <value>In Wiedergabe</value>
  </data>
  <data name="regStripStatusRecord" xml:space="preserve">
    <value>In Aufzeichnung</value>
  </data>
  <data name="regStripStatusStop" xml:space="preserve">
    <value>Gestoppt</value>
  </data>
  <data name="regStripStop" xml:space="preserve">
    <value>Stopp</value>
  </data>
  <data name="regStripTrigger" xml:space="preserve">
    <value>Auslöser</value>
  </data>
  <data name="regStripTriggerAuto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="regStripTriggerManual" xml:space="preserve">
    <value>Manuell</value>
  </data>
  <data name="regStripTriggerSingle" xml:space="preserve">
    <value>Einzigartig</value>
  </data>
  <data name="regStripZoom" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="regTemplate" xml:space="preserve">
    <value>Vorlage</value>
  </data>
  <data name="regTemplateDefaultName" xml:space="preserve">
    <value>myTemplateName</value>
  </data>
  <data name="regTemplateEnterName" xml:space="preserve">
    <value>Bitte geben Sie den Namen der Vorlage ein.</value>
  </data>
  <data name="regTime" xml:space="preserve">
    <value>Zeit</value>
  </data>
  <data name="gralWarning" xml:space="preserve">
    <value>Warnung!</value>
  </data>
  <data name="regWiz1Info" xml:space="preserve">
    <value>Schritt 1 von 2. Bitte schließen Sie die Stationen an, von denen Daten eingeholt werden sollen. Fügen Sie dann die Serien hinzu, die in der Grafik angezeigt werden sollen. Hierzu die Parameter einstellen und auf die Schaltfläche „Hinzufügen“ (Add) klicken. Geben Sie zum Abschluss den gewünschten Titel für die Grafik ein.</value>
  </data>
  <data name="regWiz2Info" xml:space="preserve">
    <value>Schritt 2 von 2. Wählen Sie die Achsbereiche und die Rasterstufen aus. Der Wert auf der Zeitachse stellt ein Zeitfenster dar.</value>
  </data>
  <data name="regWizard2AxisRange" xml:space="preserve">
    <value>Achsbereich</value>
  </data>
  <data name="regWizardSeriesAndTitle" xml:space="preserve">
    <value>Serien und Titel</value>
  </data>
  <data name="regTemplateList" xml:space="preserve">
    <value>Vorlagenliste</value>
  </data>
  <data name="regTemplateParams" xml:space="preserve">
    <value>Vorlagenparameter</value>
  </data>
  <data name="regTemplateSeriesData" xml:space="preserve">
    <value>Serien</value>
  </data>
  <data name="regTemplateTrigger" xml:space="preserve">
    <value>Auslöser</value>
  </data>
  <data name="regSeriesSerieStationNoName" xml:space="preserve">
    <value>Kein Name</value>
  </data>
  <data name="filterCommaSeparated" xml:space="preserve">
    <value>Werte mit Komma als Trennzeichen (*.csv)|*.csv</value>
  </data>
  <data name="filterLabRegister" xml:space="preserve">
    <value>LabRegister-Datei (*.lbr)|*.lbr </value>
  </data>
  <data name="regEnterPlotTitle" xml:space="preserve">
    <value>Geben Sie den gewünschten Titel für die Grafik ein.</value>
  </data>
  <data name="regMsgExtNotValid" xml:space="preserve">
    <value>Die Dateierweiterung muss .lbr oder .csv sein.</value>
  </data>
  <data name="regMsgGeneratingExt" xml:space="preserve">
    <value>Generiert [0]</value>
    <comment>[0] is the extension, for ex. "CSV"</comment>
  </data>
  <data name="regMsgGeneratingFile" xml:space="preserve">
    <value>Generiert [0]. Bitte warten...</value>
    <comment>[0] contains a file name</comment>
  </data>
  <data name="regMsgLoadingExt" xml:space="preserve">
    <value>Lädt [0]</value>
    <comment>[0] is the extension, for ex. "CSV"</comment>
  </data>
  <data name="regMsgLoadingFile" xml:space="preserve">
    <value>Lädt [0]. Bitte warten...</value>
    <comment>[0] contains a file name</comment>
  </data>
  <data name="regPlottingInAnotherWindow" xml:space="preserve">
    <value>Für diese Grafik ist eine Station definiert, die Grafik wird bereits in einem anderen Fenster generiert</value>
  </data>
  <data name="regCannotCreateFile" xml:space="preserve">
    <value>Datei {0} kann nicht erstellt werden (Fehler: {1})</value>
  </data>
  <data name="regCannotOpenFile" xml:space="preserve">
    <value>Datei {0} kann nicht geöffnet werden (Fehler: {1})</value>
  </data>
  <data name="regCoordTime" xml:space="preserve">
    <value>Zeit:</value>
    <comment>Time: xx:xx:xx</comment>
  </data>
  <data name="regSecondsPerTick" xml:space="preserve">
    <value>{0} Sek/Tick</value>
    <comment>Ex 2 Sec/Tick (Seconds per tick)</comment>
  </data>
  <data name="regNotLBRFile" xml:space="preserve">
    <value>Dies ist keine LBR-Datei oder die Datei ist beschädigt.</value>
  </data>
  <data name="regSeriesCannotSelectMagnitude" xml:space="preserve">
    <value>This magnitude is not compatible with the selected station.</value>
  </data>
</root>